on rev x do
  (),extract value orderby index desc from x
end
on lrev x do
  each y in x rev[x] end
end
on uniq x do
  if x~() () else
    t:select list first value by value from x
    t.c0
  end
end
on abs x do max x,-x end
on absv x do each y in x abs[y] end end
on sgn x do
  if x<0 -1
  else if x=0 0
  else 1
  end end
end
on vsgn x do each y in x sgn[y] end end
on base x n do
  a:()
  while x
    a:a,n%x
    x:floor x/n
  end
  rev[a]
end

on sort x do
  extract value orderby value asc from x
end

on sortd x do
  extract value orderby value desc from x
end
on mhdist p1 p2 do sum absv[p2-p1] end  

on id x do x end

on prod x do
  r:1
  each y in x r:r*y end
  r
end

on quicksort l c do # takes an array interface.
  quicksort_[l c 0 -1+count l]
end

on quicksort_ l c lo hi do
  if ((lo+1)>hi)|lo<0
    ()
  else
    p:qs_partition[l lo hi]
    quicksort_[l lo p-1]
    quicksort_[l p+1 hi]
  end
end

on qs_partition l lo hi do
  pivot:l[hi]
  i:lo-1
  j:lo
  while j<hi
    if l[j]<pivot+1
      i:i+1
      tmp:l[i]
      l[i]:l[j]
      l[j]:tmp
    end
    j:j+1
  end
  i:i+1
  tmp:l[i]
  l[i]:l[hi]
  l[hi]:tmp
  i
end
